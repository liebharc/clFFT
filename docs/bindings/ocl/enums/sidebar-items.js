initSidebarItems({"enum":[["AddressingMode","cl_addressing_mode"],["BufferCmdDataShape","The 'shape' of the data to be processed, whether one or multi-dimensional."],["BufferCmdKind","The type of operation to be performed by a command."],["BufferCreateType","cl_buffer_create_type"],["Cbool","cl_bool"],["ChannelType","cl_channel_type"],["CommandExecutionStatus","command execution status"],["CommandQueueInfo","cl_command_queue_info"],["CommandQueueInfoResult","A command queue info result."],["CommandType","cl_command_type"],["ContextInfo","cl_context_info"],["ContextInfoOrPropertiesPointerType","cl_context_info + cl_context_properties"],["ContextInfoResult","[UNSTABLE][INCOMPLETE] A context info result."],["ContextProperty","cl_context_info + cl_context_properties"],["ContextPropertyValue",""],["DeviceInfo","cl_device_info"],["DeviceInfoResult","[UNSTABLE][INCOMPLETE] A device info result."],["DeviceLocalMemType","cl_device_local_mem_type"],["DeviceMemCacheType","cl_mem_cache_type"],["DevicePartitionProperty","[INCOMPLETE] cl_device_partition_property"],["DeviceSpecifier","Specifies [what boils down to] a list of devices."],["EventInfo","cl_event_info"],["EventInfoResult","An event info result."],["FilterMode","cl_filter_mode"],["ImageChannelDataType","Describes the size of the channel data type. The number of bits per element determined by the image_channel_data_type and image_channel_order must be a power of two. The list of supported values is described in the table below. (from SDK)"],["ImageChannelOrder","Specifies the number of channels and the channel layout i.e. the memory layout in which channels are stored in the image. Valid values are described in the table below. (from SDK)"],["ImageInfo","cl_image_info"],["ImageInfoResult","An image info result."],["KernelArg","[UNSAFE] Kernel argument option type."],["KernelArgAccessQualifier","cl_kernel_arg_access_qualifier"],["KernelArgAddressQualifier","cl_kernel_arg_address_qualifier"],["KernelArgInfo","cl_kernel_arg_info"],["KernelArgInfoResult","A kernel arg info result."],["KernelInfo","cl_kernel_info"],["KernelInfoResult","A kernel info result."],["KernelWorkGroupInfo","cl_kernel_work_group_info"],["KernelWorkGroupInfoResult","A kernel work group info result."],["MemInfo","cl_mem_info"],["MemInfoResult","[UNSTABLE][INCOMPLETE] A mem info result. /"],["MemObjectType","cl_mem_object_type"],["PlatformInfo","cl_platform_info"],["PlatformInfoResult","Platform info result."],["Polling","cl_bool: Polling"],["ProfilingInfo","cl_profiling_info"],["ProfilingInfoResult","A profiling info result."],["ProgramBuildInfo","cl_program_build_info"],["ProgramBuildInfoResult","A program build info result."],["ProgramBuildStatus","cl_build_status"],["ProgramInfo","cl_program_info"],["ProgramInfoResult","A program info result."],["SamplerInfo","cl_sampler_info"],["SamplerInfoResult","A sampler info result."],["Status","TODO: MOVE ME AND LEAVE CONSTS AS THEY WERE. The status of an OpenCL API call. Used for returning success/error codes."]]});